<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">
    <resultMap id="SysUserResult" type="SysUser">
        <id property="userId" column="user_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="comeFrom" column="come_from"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="piId" column="pi_id"/>
        <result property="jobNumber" column="job_number"/>
        <result property="school" column="school"/>
        <result property="degree" column="degree"/>
        <result property="studyIntroduction" column="study_introduction"/>
        <result property="isMicro" column="is_micro"/>
        <result property="isPersonSample" column="is_person_sample"/>
        <result property="isChemical" column="is_chemical"/>
        <result property="expiredTime" column="expired_time"/>
        <association property="dept" column="dept_id" javaType="SysDept" select="selectDept"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>
    <resultMap id="deptResult" type="SysDept">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="status" column="dept_status"/>
    </resultMap>
    <resultMap id="RoleResult" type="SysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
    </resultMap>
    <sql id="selectUserVo">
        select u.user_id,
            u.dept_id,
            u.user_name,
            u.nick_name,
            u.come_from,
            u.email,
            u.avatar,
            u.phonenumber,
            u.password,
            u.sex,
            u.status,
            u.del_flag,
            u.login_ip,
            u.login_date,
            u.create_by,
            u.create_time,
            u.remark,
            u.pi_id,
            u.job_number,
            u.school,
            u.degree,
            u.study_duration,
            u.study_introduction,
            u.is_micro,
            u.is_person_sample,
            u.is_chemical,
            u.expired_time,
            d.dept_id,
            d.parent_id,
            d.dept_name,
            d.order_num,
            d.leader,
            d.status as dept_status,
            r.role_id,
            r.role_name,
            r.role_key,
            r.role_sort,
            r.data_scope,
            r.status as role_status
        from sys_user u
                 left join sys_dept d on u.dept_id=d.dept_id
                 left join sys_user_role ur on u.user_id=ur.user_id
                 left join sys_role r on r.role_id=ur.role_id
    </sql>
    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
        select u.user_id, u.dept_id, u.nick_name,u.come_from, u.user_name, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, u.pi_id, u.job_number ,u.school ,u.degree,u.study_duration ,u.study_introduction,u.is_micro,u.is_person_sample,u.is_chemical, d.dept_name, d.leader from sys_user u left join sys_dept d on u.dept_id = d.dept_id where u.del_flag = '0'
        <if test="userName != null and userName != ''">
            AND u.user_name like concat('%', #{userName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <if test="email != null and email != ''">
            AND u.email=#{email}
        </if>
        <if test="password != null and password != ''">
            AND u.password=#{password}
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
        </if>
        <!-- 数据范围过滤 -->        ${params.dataScope}
    </select>
    <select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_name = #{userName}
    </select>
    <select id="selectUserByNickName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.nick_name = #{nickName}
    </select>
    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        select u.user_id,
            u.dept_id,
            u.user_name,
            u.nick_name,
            u.come_from,
            u.email,
            u.avatar,
            u.phonenumber,
            u.password,
            u.sex,
            u.status,
            u.del_flag,
            u.login_ip,
            u.login_date,
            u.create_by,
            u.create_time,
            u.remark,
            u.pi_id,
            u.job_number,
            u.school,
            u.degree,
            u.study_duration,
            u.study_introduction,
            u.is_micro,
            u.is_person_sample,
            u.is_chemical,
            d.dept_id,
            d.parent_id,
            d.dept_name,
            d.order_num,
            d.leader,
            d.status as dept_status,
            r.role_id,
            r.role_name,
            r.role_key,
            r.role_sort,
            r.data_scope,
            r.status as role_status
        from sys_user u
                 left join sys_dept d on u.dept_id=d.dept_id
                 left join sys_user_role ur on u.user_id=ur.user_id
                 left join sys_role r on r.role_id=ur.role_id
        where u.user_id=#{userId}
    </select>
    <select id="checkUserNameUnique" parameterType="String" resultType="int">
        select count(1)
        from sys_user
        where user_name=#{userName}
        limit 1
    </select>
    <select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
        select user_id, phonenumber
        from sys_user
        where phonenumber=#{phonenumber}
        limit 1
    </select>
    <select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
        select user_id, email
        from sys_user
        where email=#{email}
        limit 1
    </select>
    <select id="selectUsernamesAndIdsByRoleId" parameterType="Long" resultMap="SysUserResult">
        select user_name, sys_user.user_id
        from sys_user
                 join sys_user_role sur on sys_user.user_id=sur.user_id
        where role_id=#{roleId}
    </select>
    <insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user(
        <if test="userId != null and userId != 0">user_id,</if>
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="userName != null and userName != ''">user_name,</if>
        <if test="nickName != null and nickName != ''">nick_name,</if>
        <if test="comeFrom != null and comeFrom != ''">come_from,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
        <if test="sex != null and sex != ''">sex,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="piId != null">pi_id,</if>
        <if test="jobNumber != null">job_number,</if>
        <if test="school != null">school,</if>
        <if test="degree != null">degree,</if>
        <if test="studyDuration != null">study_duration,</if>
        <if test="studyIntroduction != null">study_introduction,</if>
        <if test="isMicro != null">is_micro,</if>
        <if test="isPersonSample != null">is_person_sample,</if>
        <if test="isChemical != null">is_chemical,</if>
        create_time )values(
        <if test="userId != null and userId != ''">#{userId},</if>
        <if test="deptId != null and deptId != ''">#{deptId},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="nickName != null and nickName != ''">#{nickName},</if>
        <if test="comeFrom != null and comeFrom != ''">#{comeFrom},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
        <if test="sex != null and sex != ''">#{sex},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="piId != null">#{piId},</if>
        <if test="jobNumber != null">#{jobNumber},</if>
        <if test="school != null">#{school},</if>
        <if test="degree != null">#{degree},</if>
        <if test="studyDuration != null">#{studyDuration},</if>
        <if test="studyIntroduction != null">#{studyIntroduction},</if>
        <if test="isMicro != null">#{isMicro},</if>
        <if test="isPersonSample != null">#{isPersonSample},</if>
        <if test="isChemical != null">#{isChemical},</if>
        sysdate())
    </insert>
    <update id="updateUser" parameterType="SysUser">
        update sys_user
        <set>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="comeFrom != null and comeFrom != ''">come_from = #{comeFrom},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="piId != null">pi_id = #{piId},</if>
            <if test="jobNumber != null">job_number=#{jobNumber},</if>
            <if test="school != null">job_number=#{school},</if>
            <if test="degree != null">job_number=#{degree},</if>
            <if test="studyDuration != null">study_duration=#{studyDuration},</if>
            <if test="studyIntroduction != null">study_introduction=#{studyIntroduction},</if>
            <if test="isMicro != null">is_micro=#{isMicro},</if>
            <if test="isPersonSample != null">is_person_sample=#{isPersonSample},</if>
            <if test="isChemical != null">is_chemical=#{isChemical},</if>
            <if test="expiredTime != null">expired_time=#{expiredTime},</if>
            update_time = sysdate()
        </set>
        where user_id = #{userId}
    </update>
    <update id="updateUserStatus" parameterType="SysUser">
        update sys_user
        set status = #{status}
        where user_id=#{userId}
    </update>
    <update id="updateUserAvatar" parameterType="SysUser">
        update sys_user
        set avatar = #{avatar}
        where user_name=#{userName}
    </update>
    <update id="resetUserPwd" parameterType="SysUser">
        update sys_user
        set password = #{password}
        where user_name=#{userName}
    </update>
    <update id="deleteUserById" parameterType="Long">
        update sys_user
        set del_flag = '2'
        where user_id=#{userId}
    </update>
    <update id="deleteUserByIds" parameterType="Long">
        update sys_user set del_flag = '2' where user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>
    <select id="selectChemicalsOfUserById" parameterType="Long" resultType="com.ruoyi.system.domain.SysChemical">
        select sc.chemical_id, chemical_type
        from sys_user_chemical
                 join sys_chemical sc on sys_user_chemical.chemical_id=sc.chemical_id
        where user_id=#{id}
    </select>
    <select id="selectPersonSamplesOfUserById" parameterType="Long"
            resultType="com.ruoyi.system.domain.SysPersonSample">
        select sps.sample_id, sample_number
        from sys_user_person_sample
                 join sys_person_sample sps on sys_user_person_sample.sample_id=sps.sample_id
        where user_id=#{id}
    </select>
    <select id="selectMicrosOfUserById" parameterType="Long" resultType="com.ruoyi.system.domain.SysMicro">
        select sm.micro_id, micro_name, micro_damage, micro_medicinal, micro_vaccine
        from sys_user_micro
                 join sys_micro sm on sys_user_micro.micro_id=sm.micro_id
        where user_id=#{id}
    </select>
    <select id="selectUsersOfPiByPiId" parameterType="Long" resultMap="SysUserResult">
        <!--select user_id, nick_name,user_name-->
        select *
        from sys_user
        where pi_id=#{piId}
    </select>
    <select id="selectDept" parameterType="Long" resultMap="deptResult">
        select * from sys_dept
        where dept_id = #{dept_id}
    </select>
    <select id="selectAuditsOfPiByPiId" parameterType="Long" resultMap="SysUserResult">
        select user_id, nick_name,user_name
        from sys_user
        where pi_id=#{piId} and status!=0 and del_flag=0
    </select>
    <select id="selectAllPis" resultMap="SysUserResult">
        select *
        <!--user_id,nick_name-->
        from sys_user
        where pi_id=-1
    </select>
</mapper>
